// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package din is a generated GoMock package.
package din

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	jsonrpc "github.com/umbracle/ethgo/jsonrpc"
)

// MockIDingoClient is a mock of IDingoClient interface.
type MockIDingoClient struct {
	ctrl     *gomock.Controller
	recorder *MockIDingoClientMockRecorder
}

// MockIDingoClientMockRecorder is the mock recorder for MockIDingoClient.
type MockIDingoClientMockRecorder struct {
	mock *MockIDingoClient
}

// NewMockIDingoClient creates a new mock instance.
func NewMockIDingoClient(ctrl *gomock.Controller) *MockIDingoClient {
	mock := &MockIDingoClient{ctrl: ctrl}
	mock.recorder = &MockIDingoClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDingoClient) EXPECT() *MockIDingoClientMockRecorder {
	return m.recorder
}

// GetEthClient mocks base method.
func (m *MockIDingoClient) GetEthClient() *jsonrpc.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEthClient")
	ret0, _ := ret[0].(*jsonrpc.Client)
	return ret0
}

// GetEthClient indicates an expected call of GetEthClient.
func (mr *MockIDingoClientMockRecorder) GetEthClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEthClient", reflect.TypeOf((*MockIDingoClient)(nil).GetEthClient))
}

// GetLatestBlockNumber mocks base method.
func (m *MockIDingoClient) GetLatestBlockNumber() (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestBlockNumber")
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestBlockNumber indicates an expected call of GetLatestBlockNumber.
func (mr *MockIDingoClientMockRecorder) GetLatestBlockNumber() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestBlockNumber", reflect.TypeOf((*MockIDingoClient)(nil).GetLatestBlockNumber))
}

// GetNetworkMethodNameByBit mocks base method.
func (m *MockIDingoClient) GetNetworkMethodNameByBit(networkName string, bit uint8) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkMethodNameByBit", networkName, bit)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkMethodNameByBit indicates an expected call of GetNetworkMethodNameByBit.
func (mr *MockIDingoClientMockRecorder) GetNetworkMethodNameByBit(networkName, bit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkMethodNameByBit", reflect.TypeOf((*MockIDingoClient)(nil).GetNetworkMethodNameByBit), networkName, bit)
}

// GetNetworkServiceMethods mocks base method.
func (m *MockIDingoClient) GetNetworkServiceMethods(networkServiceAddress string) ([]*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkServiceMethods", networkServiceAddress)
	ret0, _ := ret[0].([]*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkServiceMethods indicates an expected call of GetNetworkServiceMethods.
func (mr *MockIDingoClientMockRecorder) GetNetworkServiceMethods(networkServiceAddress interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkServiceMethods", reflect.TypeOf((*MockIDingoClient)(nil).GetNetworkServiceMethods), networkServiceAddress)
}

// GetRegistryData mocks base method.
func (m *MockIDingoClient) GetRegistryData() (*DinRegistryData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRegistryData")
	ret0, _ := ret[0].(*DinRegistryData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRegistryData indicates an expected call of GetRegistryData.
func (mr *MockIDingoClientMockRecorder) GetRegistryData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRegistryData", reflect.TypeOf((*MockIDingoClient)(nil).GetRegistryData))
}
