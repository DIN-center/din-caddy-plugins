// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package runtime is a generated GoMock package.
package runtime

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRuntimeClient is a mock of IRuntimeClient interface.
type MockIRuntimeClient struct {
	ctrl     *gomock.Controller
	recorder *MockIRuntimeClientMockRecorder
}

// MockIRuntimeClientMockRecorder is the mock recorder for MockIRuntimeClient.
type MockIRuntimeClientMockRecorder struct {
	mock *MockIRuntimeClient
}

// NewMockIRuntimeClient creates a new mock instance.
func NewMockIRuntimeClient(ctrl *gomock.Controller) *MockIRuntimeClient {
	mock := &MockIRuntimeClient{ctrl: ctrl}
	mock.recorder = &MockIRuntimeClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRuntimeClient) EXPECT() *MockIRuntimeClientMockRecorder {
	return m.recorder
}

// GetLatestBlockNumber mocks base method.
func (m *MockIRuntimeClient) GetLatestBlockNumber(httpUrl string, headers map[string]string) (int64, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestBlockNumber", httpUrl, headers)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetLatestBlockNumber indicates an expected call of GetLatestBlockNumber.
func (mr *MockIRuntimeClientMockRecorder) GetLatestBlockNumber(httpUrl, headers interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestBlockNumber", reflect.TypeOf((*MockIRuntimeClient)(nil).GetLatestBlockNumber), httpUrl, headers)
}
