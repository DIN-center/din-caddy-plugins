// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package dingo is a generated GoMock package.
package dingo

import (
	reflect "reflect"

	din "github.com/DIN-center/din-sc/apps/din-go/lib/din"
	gomock "github.com/golang/mock/gomock"
)

// MockIDingoClient is a mock of IDingoClient interface.
type MockIDingoClient struct {
	ctrl     *gomock.Controller
	recorder *MockIDingoClientMockRecorder
}

// MockIDingoClientMockRecorder is the mock recorder for MockIDingoClient.
type MockIDingoClientMockRecorder struct {
	mock *MockIDingoClient
}

// NewMockIDingoClient creates a new mock instance.
func NewMockIDingoClient(ctrl *gomock.Controller) *MockIDingoClient {
	mock := &MockIDingoClient{ctrl: ctrl}
	mock.recorder = &MockIDingoClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDingoClient) EXPECT() *MockIDingoClientMockRecorder {
	return m.recorder
}

// GetDataFromRegistry mocks base method.
func (m *MockIDingoClient) GetDataFromRegistry() (*din.DinRegistryData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataFromRegistry")
	ret0, _ := ret[0].(*din.DinRegistryData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataFromRegistry indicates an expected call of GetDataFromRegistry.
func (mr *MockIDingoClientMockRecorder) GetDataFromRegistry() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataFromRegistry", reflect.TypeOf((*MockIDingoClient)(nil).GetDataFromRegistry))
}
