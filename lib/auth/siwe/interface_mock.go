// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package siwe is a generated GoMock package.
package siwe

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockISIWESignerClient is a mock of ISIWESignerClient interface.
type MockISIWESignerClient struct {
	ctrl     *gomock.Controller
	recorder *MockISIWESignerClientMockRecorder
}

// MockISIWESignerClientMockRecorder is the mock recorder for MockISIWESignerClient.
type MockISIWESignerClientMockRecorder struct {
	mock *MockISIWESignerClient
}

// NewMockISIWESignerClient creates a new mock instance.
func NewMockISIWESignerClient(ctrl *gomock.Controller) *MockISIWESignerClient {
	mock := &MockISIWESignerClient{ctrl: ctrl}
	mock.recorder = &MockISIWESignerClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISIWESignerClient) EXPECT() *MockISIWESignerClientMockRecorder {
	return m.recorder
}

// CreateNewSIWEAuth mocks base method.
func (m *MockISIWESignerClient) CreateNewSIWEAuth(authUrl string, sessionCount int) *SIWEClientAuth {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewSIWEAuth", authUrl, sessionCount)
	ret0, _ := ret[0].(*SIWEClientAuth)
	return ret0
}

// CreateNewSIWEAuth indicates an expected call of CreateNewSIWEAuth.
func (mr *MockISIWESignerClientMockRecorder) CreateNewSIWEAuth(authUrl, sessionCount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewSIWEAuth", reflect.TypeOf((*MockISIWESignerClient)(nil).CreateNewSIWEAuth), authUrl, sessionCount)
}

// GenPrivKey mocks base method.
func (m *MockISIWESignerClient) GenPrivKey(sc *SigningConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenPrivKey", sc)
	ret0, _ := ret[0].(error)
	return ret0
}

// GenPrivKey indicates an expected call of GenPrivKey.
func (mr *MockISIWESignerClientMockRecorder) GenPrivKey(sc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenPrivKey", reflect.TypeOf((*MockISIWESignerClient)(nil).GenPrivKey), sc)
}

// Sign mocks base method.
func (m *MockISIWESignerClient) Sign(msg string, sc *SigningConfig) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sign", msg, sc)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Sign indicates an expected call of Sign.
func (mr *MockISIWESignerClientMockRecorder) Sign(msg, sc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sign", reflect.TypeOf((*MockISIWESignerClient)(nil).Sign), msg, sc)
}
