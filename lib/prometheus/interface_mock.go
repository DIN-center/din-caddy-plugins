// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package prometheus is a generated GoMock package.
package prometheus

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPrometheusClient is a mock of IPrometheusClient interface.
type MockIPrometheusClient struct {
	ctrl     *gomock.Controller
	recorder *MockIPrometheusClientMockRecorder
}

// MockIPrometheusClientMockRecorder is the mock recorder for MockIPrometheusClient.
type MockIPrometheusClientMockRecorder struct {
	mock *MockIPrometheusClient
}

// NewMockIPrometheusClient creates a new mock instance.
func NewMockIPrometheusClient(ctrl *gomock.Controller) *MockIPrometheusClient {
	mock := &MockIPrometheusClient{ctrl: ctrl}
	mock.recorder = &MockIPrometheusClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPrometheusClient) EXPECT() *MockIPrometheusClientMockRecorder {
	return m.recorder
}

// HandleLatestBlockMetric mocks base method.
func (m *MockIPrometheusClient) HandleLatestBlockMetric(data *PromLatestBlockMetricData) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleLatestBlockMetric", data)
}

// HandleLatestBlockMetric indicates an expected call of HandleLatestBlockMetric.
func (mr *MockIPrometheusClientMockRecorder) HandleLatestBlockMetric(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleLatestBlockMetric", reflect.TypeOf((*MockIPrometheusClient)(nil).HandleLatestBlockMetric), data)
}

// HandleRequestMetric mocks base method.
func (m *MockIPrometheusClient) HandleRequestMetric(reqBodyBytes []byte, data *PromRequestMetricData) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleRequestMetric", reqBodyBytes, data)
}

// HandleRequestMetric indicates an expected call of HandleRequestMetric.
func (mr *MockIPrometheusClientMockRecorder) HandleRequestMetric(reqBodyBytes, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleRequestMetric", reflect.TypeOf((*MockIPrometheusClient)(nil).HandleRequestMetric), reqBodyBytes, data)
}
