extensions:
  health_check:
  basicauth/grafana_cloud_tempo:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/basicauthextension
    client_auth:
      username: "872076"
      password: 
  basicauth/grafana_cloud_prometheus:
    client_auth:
      username: "1555029"
      password: 
  basicauth/grafana_cloud_loki:
    client_auth:
      username: "877760"
      password: 

receivers:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'din-caddy-metrics-collector'
          scrape_interval: 60s #default 60s
          static_configs:
            - targets: ['din-caddy:2019'] ##TODO: Needs to be updated with the actual docker container name
  otlp:
    # https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver/otlpreceiver
    protocols:
      grpc:
      http:
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"

processors:
  batch:
    # https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/batchprocessor
  resourcedetection:
    # Enriches telemetry data with resource information from the host
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/resourcedetectionprocessor
    detectors: ["env", "system"]
    override: false
  transform/add_resource_attributes_as_metric_attributes:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/transformprocessor
    error_mode: ignore
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["deployment.environment"], resource.attributes["deployment.environment"])
          - set(attributes["service.version"], resource.attributes["service.version"])

exporters:
  otlp/grafana_cloud_traces:
    # https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter/otlpexporter
    endpoint: "tempo-prod-04-prod-us-east-0.grafana.net:443"
    auth:
      authenticator: basicauth/grafana_cloud_tempo
  loki/grafana_cloud_logs:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/lokiexporter
    endpoint: "https://logs-prod-006.grafana.net/loki/api/v1/push"
    auth:
      authenticator: basicauth/grafana_cloud_loki
  prometheusremotewrite/grafana_cloud_metrics:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/prometheusremotewriteexporter
    endpoint: "https://prometheus-prod-13-prod-us-east-0.grafana.net/api/prom/push"
    add_metric_suffixes: false
    auth:
      authenticator: basicauth/grafana_cloud_prometheus
  logging:
    verbosity: detailed

service:
  extensions: [basicauth/grafana_cloud_tempo, basicauth/grafana_cloud_prometheus, basicauth/grafana_cloud_loki, health_check]
  pipelines:
    metrics:
      receivers: [prometheus]
      processors: [resourcedetection, transform/add_resource_attributes_as_metric_attributes, batch]
      exporters: [prometheusremotewrite/grafana_cloud_metrics]
    traces:
      receivers: [otlp]
      processors: [resourcedetection, batch]
      exporters: [otlp/grafana_cloud_traces, logging]
    # logs:
    #   receivers: [prometheus]
    #   processors: [resourcedetection, batch]
    #   exporters: [loki/grafana_cloud_logs]
  telemetry:
    metrics:
      level: detailed
      address: ':8888'
    # logs:
    #   level: "debug"
